from typing import List

# dependencies
import telebot
from telebot import TeleBot

# helpers
from users.User import User

BOT_COMMANDS: List[telebot.types.BotCommand] = [
    telebot.types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    telebot.types.BotCommand("menu", "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"),
    telebot.types.BotCommand("referal", "500 –≥—Ä–∏–≤–µ–Ω –∑–∞ –¥—Ä—É–≥–∞"),
    telebot.types.BotCommand("homework", "–ù–∞–ø–æ–º–Ω–∏—Ç—å –¥–æ–º–∞—à–∫—É"),
    telebot.types.BotCommand("schedule", "–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫?"),
    telebot.types.BotCommand("progress", "–ó–∞–ø–∏—Å–∞—Ç—å / –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"),
    telebot.types.BotCommand("payment", "–£–∑–Ω–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ —É—Ä–æ–∫–æ–≤"),
    telebot.types.BotCommand("help", "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫"),
    telebot.types.BotCommand("settings", "–ü—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
    telebot.types.BotCommand("setcommands", "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"),
]

BOT_REPLIES = {
    'start': '–ü—Ä–∏–≤–µ—Ç!\n–Ø ‚Äî –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –î–∞–º–∏—Ä–∞. –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è ü§ù\n\n–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—Éüëá',
    'help': '\n–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω–∞—à—ë–ª –±–∞–≥ –≤ –±–æ—Ç–µ, –ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É @best_prepod \n\n–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é: /menu',
    'setcommands': "–ö–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è",
}


class Commands:
    def __init__(self, bot: TeleBot, username: str):
        self.bot = bot
        self.bot_commands = BOT_COMMANDS
        self.username = username

    # /start
    def handle_start(self):
        command_name = "start"

        @self.bot.message_handler([command_name])
        def reply(message):

            # set user information
            active_user = User(message)

            # reply to user
            self.bot.reply_to(message, BOT_REPLIES['start'])

            # prints if command is handled
            self.notify_me_into_console(command=command_name)

    # /help
    def handle_help(self):
        command_name = 'help'

        @self.bot.message_handler(commands=[command_name])
        def send_help(message):
            help_message = "–£ –±–æ—Ç–∞ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã: \n\n"
            for command in BOT_COMMANDS:
                help_message += f"/{command.command} "
                help_message += f"{command.description}\n"

            help_message += BOT_REPLIES['help']

            self.bot.reply_to(message, help_message)
            self.notify_me_into_console(command=command_name)

    # /setcommands
    def setCommands(self):
        command_name = "setcommands"

        @self.bot.message_handler(commands=[command_name])
        def set_bot_commands(message):
            self.bot.set_my_commands(commands=self.bot_commands)
            self.bot.reply_to(
                message, BOT_REPLIES['setcommands']
            )
            self.notify_me_into_console(command=command_name)

    # console printing
    def notify_me_into_console(self, command):
        bot_username = self.username

        print(
            f"–ë–æ—Ç @{bot_username} —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –∫–æ–º–∞–Ω–¥—É '/{command}'. –ü—Ä–æ–≤–µ—Ä—å —á–∞—Ç"
        )
